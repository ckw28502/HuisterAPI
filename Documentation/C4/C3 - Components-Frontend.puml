
x@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2

!include DEVICONS/firebase.puml


!include DEVICONS/mysql.puml

!include DEVICONS2/spring.puml


'Containers
Container(api,"Api Application","Spring Boot",$sprite="spring","Provides properties renting functionality via JSON/HTTP API")
ContainerDb(db,"Database","MySQL",$sprite="mysql","Stores users data, properties data, orders data")
ContainerDb_Ext(firebase,"Firebase",$sprite="firebase","Firebase cloud service for storing user profile picture and property images")

'Components
Container_Boundary(c1,"Huister Single Page Application"){

    'Container
    Component(lrTemplate,"Login Register Template","React","Container for pages for user who has not logged in")
    Component(userTemplate,"User Template","React","Container for pages for user who has logged in")

    'Page
    Component(login,"Login Page","React","Page for user to log in")
    Component(register,"Register Page","React","Page for user to register their account")
    Component(forgotPassword,"Forgot Password Page","React","Page for user to get link to change password page which will be sent through email")

    Component(dashboard,"Dashboard Page","React","Dashboard for logged-in user")
    Component(properties,"Properties Page","React","Page filled with list of properties")
    Component(owners,"Owners Page","React","Page filled with user with owner role ( Admin only )")
    Component(userProfile,"User Profile Page","React","Page filled logged-in user data ( Owner and Customer only )")

    'Component
    Component(navbar,"Navbar","React","Provide abilities to change page")
    Component(modal,"Modal","MDBootstrap","Provide modal for additional information")
    Component(select,"React-Select","React-Select","Provide customized input for filtering")
    Component(chart,"ChartJs","ChartJs","Provide charts for reporting")

    'Service
    Component(userService,"User Service","JavaScript","Manage user related connection to backend")
    Component(cityService,"City Service","JavaScript","Manage city related connection to backend")
    Component(propertyService,"Property Service","JavaScript","Manage property related connection to backend")
        Component(firebaseService,"Firebase Service","JavaScript","Manage connection to firebase storage")

}

'Relations from Container to Page
Rel(lrTemplate,login,"uses")
Rel(lrTemplate,register,"uses")
Rel(lrTemplate,forgotPassword,"uses")

Rel(userTemplate,dashboard,"uses")
Rel(userTemplate,properties,"uses")
Rel(userTemplate,owners,"uses")
Rel(userTemplate,userProfile,"uses")

'Relations from Container to Component
Rel(userTemplate,navbar,"uses")

'Relations from Page to Component
Rel(register,modal,"uses")
Rel(owners,modal,"uses")

Rel(properties,select,"Uses")
Rel(owners,select,"Uses")

Rel(dashboard,chart,"Uses")

'Relations from Page to Service
Rel(login,userService,"Uses")
Rel(register,userService,"Uses")
Rel(forgotPassword,userService,"Uses")
Rel(userProfile,userService,"Uses")

Rel(properties,cityService,"Uses")

Rel(properties,propertyService,"Uses")

Rel(register,firebaseService,"Uses")
Rel(userProfile,firebaseService,"Uses")

'Relations from Service to Api Application
Rel(userService,api,"GET,POST,PUT")
Rel(cityService,api,"GET")
Rel(propertyService,api,"GET,POST,PUT,DELETE")

'Relations from Service to external Storage
Rel(firebaseService,firebase,"POST")

'Relation from API Application to Database
Rel(api,db,"JDBC")

@enduml