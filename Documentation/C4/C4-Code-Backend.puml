@startuml

'Controller Layer

Class UserController{
    'properties
    UserUseCasesCollection userUseCasesCollection

    'Methods
    ResponseEntity<GetUserByIdResponse> getUserById()
    ResponseEntity<Void> createUser(CreateUserRequest request)
    ResponseEntity<Void> updateUser(long id, UpdateUserRequest request)
    ResponseEntity<LoginResponse> login(LoginRequest request)
    ResponseEntity<Void> changePassword(long id, ChangePasswordRequest request)
    ResponseEntity<List<GetAllOwnersResponse>> getAllOwners()
    ResponseEntity<Void> setProfilePictureUrl(long id, SetProfilePictureUrlRequest request)
}

UserUseCasesCollection <-- UserController

Class CityController{
    'properties
    CityUseCase cityUseCase

    'Methods
    ResponseEntity<GetAllCitiesResponse> getAllCities(long id)
}

CityUseCase <-- CityController

Class PropertyController{
    'properties
    PropertyUseCasesCollection propertyUseCasesCollection

    'Methods
    ResponseEntity<List<GetAllPropertiesResponse>> getAllProperties(long id)
    ResponseEntity<GetPropertyDetailResponse> getAllPropertiesResponse(long id)
    ResponseEntity<Void> createProperty(CreatePropertyRequest request)
    ResponseEntity<Void> updateProperty(long id, UpdatePropertyRequest request)
    ResponseEntity<Void> deleteProperty(long id)
    ResponseEntity<GetRentedNotRentedPropertyRatioResponse> getRentedNotRentedPropertyRatio(long userId)

}

PropertyUseCasesCollection <-- PropertyController

Class OrderController{
    'properties
    OrderUseCasesCollection orderUseCasesCollection

    'Methods
    ResponseEntity<List<GetAllOrdersResponse>> getAllOrdersResponse(long userId)
    ResponseEntity<Void> createOrder(CreateOrderRequest request)
    ResponseEntity<Void> updateOrder(long id, UpdateOrderRequest request)

}

OrderUseCasesCollection <-- OrderController


'Business Layer

'User UseCases
Interface UserUseCasesCollection{
    GetUserByIdResponse getUserById()
    Void createUser(CreateUserRequest request)
    Void updateUser(UpdateUserRequest request)
    LoginResponse login(LoginRequest request)
    Void changePassword(LoginRequest request)
    List<GetAllOwnersResponse> getAllOwners()
    Void setProfilePictureUrl(setProfilePictureUrlRequest request)}
}

Class UserUseCasesCollectionImpl{
    'Property
    UserRepository userRepository

    'Method
    GetUserByIdResponse getUserById()
    Void createUser(CreateUserRequest request)
    Void updateUser(UpdateUserRequest request)
    LoginResponse login(LoginRequest request)
    Void changePassword(LoginRequest request)
    List<GetAllOwnersResponse> getAllOwners()
    Void setProfilePictureUrl(setProfilePictureUrlRequest request)
}

UserUseCasesCollection <|.. UserUseCasesCollectionImpl

UserRepository <-- UserUseCasesCollectionImpl

UserEntity <-- UserUseCasesCollectionImpl

'City UseCases
Interface CityUseCase{
    GetAllCitiesResponse getAllCities(long id)
}

Class CityUseCaseImpl{
    'Property
    CityRepository cityRepository

    'Method
    GetAllCitiesResponse getAllCities(long id)
}

CityUseCase <|.. CityUseCaseImpl

CityRepository <-- CityUseCaseImpl

CityEntity <-- CityUseCaseImpl

'Property UseCases
Interface PropertyUseCasesCollection{
    List<GetAllPropertiesResponse> getAllProperties(long id)
    GetPropertyDetailResponse GetPropertyDetail(long id)
    Void createProperty(CreatePropertyRequest request)
    Void updateProperty(UpdatePropertyRequest request)
    Void deleteProperty(long id)
    GetRentedNotRentedPropertyRatioResponse getRentedNotRentedPropertyRatio(long id)}
}
Class PropertyUseCasesCollectionImpl{
    'Property
    UserRepository userRepository
    CityRepository cityRepository
    PropertyRepository propertyRepository

    'Method
    List<GetAllPropertiesResponse> getAllProperties(long id)
    GetPropertyDetailResponse GetPropertyDetail(long id)
    Void createProperty(CreatePropertyRequest request)
    Void updateProperty(UpdatePropertyRequest request)
    Void deleteProperty(long id)
    GetRentedNotRentedPropertyRatioResponse getRentedNotRentedPropertyRatio(long id)

}

PropertyUseCasesCollection <|.. PropertyUseCasesCollectionImpl

UserRepository <-- PropertyUseCasesCollectionImpl
PropertyRepository <-- PropertyUseCasesCollectionImpl


UserEntity <-- PropertyUseCasesCollectionImpl
CityEntity <-- PropertyUseCasesCollectionImpl
PropertyEntity <-- PropertyUseCasesCollectionImpl

'Order UseCases
Interface OrderUseCasesCollection{
    List<GetAllOrdersResponse> getAllOrders(long id)
    Void createOrder(CreateOrderRequest request)
    Void updateOrder(UpdateOrderRequest request)
}

Class OrderUseCasesCollectionImpl{
    'Property
    UserRepository userRepository
    PropertyRepository propertyRepository
    OrderRepository orderRepository

    'Method
    List<GetAllOrdersResponse> getAllOrders(long id)
    Void createOrder(CreateOrderRequest request)
    Void updateOrder(UpdateOrderRequest request)
}

OrderUseCasesCollection <|.. OrderUseCasesCollectionImpl

UserRepository <-- OrderUseCasesCollectionImpl
PropertyRepository <-- OrderUseCasesCollectionImpl
OrderRepository <-- OrderUseCasesCollectionImpl

UserEntity <-- OrderUseCasesCollectionImpl
PropertyEntity <-- OrderUseCasesCollectionImpl
OrderEntity <-- OrderUseCasesCollectionImpl

'Repository
Interface UserRepository
Interface CityRepository
Interface PropertyRepository
Interface OrderRepository

'Entities

Enum UserRole{
    ADMIN
    OWNER
    CUSTOMER
}

UserRole --* UserEntity

Enum OrderStatus{
    CREATED
    CANCELLED
    REJECTED
    ACCEPTED
}

OrderStatus --* OrderEntity

Class UserEntity{
    long id
    String username
    String password
    String name
    String email
    String phoneNumber
    String profilePictureUrl
    UserRole role
    boolean isActivated
}

Class CityEntity{
    long id
    String name
}

Class PropertyEntity{
    long id
    String streetName
    String postCode
    double area
    double price
    UserEntity owner
    Date endRent
    CityEntity city
}

Class OrderEntity{
    long id
    int duration
    UserEntity owner
    UserEntity customer
    PropertyEntity property
    OrderStatus status
}
PropertyEntity --> UserEntity

OrderEntity --> UserEntity
OrderEntity --> PropertyEntity

UserEntity<--UserRepository
CityEntity<--CityRepository
PropertyEntity<--PropertyRepository
OrderEntity<--OrderRepository

@enduml